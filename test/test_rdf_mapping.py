# coding: utf-8

"""
    Waterloo OpenData API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.rdf_mapping import RdfMapping

class TestRdfMapping(unittest.TestCase):
    """RdfMapping unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RdfMapping:
        """Test RdfMapping
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RdfMapping`
        """
        model = RdfMapping()
        if include_optional:
            return RdfMapping(
                rdftype = [
                    ''
                    ],
                title = openapi_client.models.title.Title(
                    predicates = [
                        ''
                        ], ),
                created = openapi_client.models.created.Created(
                    predicates = [
                        ''
                        ], 
                    datatype = '', 
                    callback = '', ),
                changed = openapi_client.models.changed.Changed(
                    predicates = [
                        ''
                        ], 
                    datatype = '', 
                    callback = '', ),
                body = openapi_client.models.body.Body(
                    predicates = [
                        ''
                        ], ),
                uid = openapi_client.models.uid.Uid(
                    predicates = [
                        ''
                        ], 
                    type = '', ),
                name = openapi_client.models.name.Name(
                    predicates = [
                        ''
                        ], ),
                comment_count = openapi_client.models.comment_count.Comment_Count(
                    predicates = [
                        ''
                        ], 
                    datatype = '', ),
                last_activity = openapi_client.models.last_activity.Last_Activity(
                    predicates = [
                        ''
                        ], 
                    datatype = '', 
                    callback = '', )
            )
        else:
            return RdfMapping(
        )
        """

    def testRdfMapping(self):
        """Test RdfMapping"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
